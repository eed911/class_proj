
DA2C_Int_CTC_B.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000001bc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000148  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  00800100  00800100  000001bc  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000001bc  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000001ec  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000030  00000000  00000000  0000022c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000006ba  00000000  00000000  0000025c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000621  00000000  00000000  00000916  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000284  00000000  00000000  00000f37  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000080  00000000  00000000  000011bc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000038b  00000000  00000000  0000123c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000000b9  00000000  00000000  000015c7  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000020  00000000  00000000  00001680  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__vector_1>
   8:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  10:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  14:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  18:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  1c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  20:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  24:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  28:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  2c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  30:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  34:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  38:	0c 94 7a 00 	jmp	0xf4	; 0xf4 <__vector_14>
  3c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  40:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  44:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  48:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  4c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  50:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  54:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  58:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  5c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  60:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  64:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	21 e0       	ldi	r18, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	a2 30       	cpi	r26, 0x02	; 2
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	0e 94 48 00 	call	0x90	; 0x90 <main>
  88:	0c 94 a2 00 	jmp	0x144	; 0x144 <_exit>

0000008c <__bad_interrupt>:
  8c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000090 <main>:

int Count = 0;				//SETS GLOBAL VARIABLE COUNT TO 0

int main(void)
{
	DDRB |= (1<<DDB2);		//SETS DIRECTION OF PORT B2 AS OUTPUT
  90:	22 9a       	sbi	0x04, 2	; 4
	PORTB |= (1<<PORTB2);	//TURNS ON PULL UP RESISTOR OF PORT B2
  92:	2a 9a       	sbi	0x05, 2	; 5
	DDRD &= (0<<DDD2);		//SETS DIRECITON OF PORT D2 AS INPUT
  94:	8a b1       	in	r24, 0x0a	; 10
  96:	1a b8       	out	0x0a, r1	; 10
	PORTD |= (1<<PORTD2);	//TURNS ON PULL UP RESISTOR OR PORT D2
  98:	5a 9a       	sbi	0x0b, 2	; 11
	
	EICRA = 0x00;			//SETS THE INTRUPT TO ACTIVATE ON LOW LEVEL
  9a:	10 92 69 00 	sts	0x0069, r1	; 0x800069 <__TEXT_REGION_LENGTH__+0x7e0069>
	EIMSK = (1<<INT0);		//SETS THE INTRUPT TO BE EXTERNAL INTERUPTS 0
  9e:	81 e0       	ldi	r24, 0x01	; 1
  a0:	8d bb       	out	0x1d, r24	; 29
	sei ();					//SETS GLOBAL INTRUPT
  a2:	78 94       	sei
  a4:	ff cf       	rjmp	.-2      	; 0xa4 <main+0x14>

000000a6 <__vector_1>:
	
	while(1)
	Count = 0;				//WAITS HERE FOR INTRUPT
}
ISR (INT0_vect){			//EXTERNAL INTERUPT ON PIN D.2
  a6:	1f 92       	push	r1
  a8:	0f 92       	push	r0
  aa:	0f b6       	in	r0, 0x3f	; 63
  ac:	0f 92       	push	r0
  ae:	11 24       	eor	r1, r1
  b0:	8f 93       	push	r24
  b2:	9f 93       	push	r25
  b4:	ef 93       	push	r30
  b6:	ff 93       	push	r31
	OCR0A = 0xC2;			//SETS THE HIGHEST VALUE OF THE TIMMER TO BE 194
  b8:	82 ec       	ldi	r24, 0xC2	; 194
  ba:	87 bd       	out	0x27, r24	; 39
	TIMSK0 |= (1<<OCIE0A);	//SETS INTRUPT TO ACTIVATE ON COMPARE OF OCR0A
  bc:	ee e6       	ldi	r30, 0x6E	; 110
  be:	f0 e0       	ldi	r31, 0x00	; 0
  c0:	80 81       	ld	r24, Z
  c2:	82 60       	ori	r24, 0x02	; 2
  c4:	80 83       	st	Z, r24
	sei ();					//SETS GLOBAL INTRUPT
  c6:	78 94       	sei
	TCCR0A |= (1<<WGM01);	//SETS TIMMER TO CTC MODE
  c8:	84 b5       	in	r24, 0x24	; 36
  ca:	82 60       	ori	r24, 0x02	; 2
  cc:	84 bd       	out	0x24, r24	; 36
	TCCR0B |= (1<<CS02) | (1<<CS00);	//SETS PRESCALLER TO 1024
  ce:	85 b5       	in	r24, 0x25	; 37
  d0:	85 60       	ori	r24, 0x05	; 5
  d2:	85 bd       	out	0x25, r24	; 37
	
	while (Count < 100);	//WAITS HERE UNTIL TIMMER INTERUPT IS COMPLETE
  d4:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
  d8:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <_edata+0x1>
  dc:	84 36       	cpi	r24, 0x64	; 100
  de:	91 05       	cpc	r25, r1
  e0:	ec f3       	brlt	.-6      	; 0xdc <__vector_1+0x36>
}
  e2:	ff 91       	pop	r31
  e4:	ef 91       	pop	r30
  e6:	9f 91       	pop	r25
  e8:	8f 91       	pop	r24
  ea:	0f 90       	pop	r0
  ec:	0f be       	out	0x3f, r0	; 63
  ee:	0f 90       	pop	r0
  f0:	1f 90       	pop	r1
  f2:	18 95       	reti

000000f4 <__vector_14>:
ISR (TIMER0_COMPA_vect){	//TIMMER COMPARE INTERUPT A
  f4:	1f 92       	push	r1
  f6:	0f 92       	push	r0
  f8:	0f b6       	in	r0, 0x3f	; 63
  fa:	0f 92       	push	r0
  fc:	11 24       	eor	r1, r1
  fe:	2f 93       	push	r18
 100:	8f 93       	push	r24
 102:	9f 93       	push	r25
	while (Count < 100){	//CONINUES LOOP UNTIL COUNT = 100
		PORTB &= (0<<PORTB2);//TURNS LED ON
		if ((TIFR0 & 0x02) == 0x02){	//IF THE OCF0A FLAG IS SET HIGH DO THIS
			TIFR0 = 0X02;	//CLEAR FLAG
 104:	22 e0       	ldi	r18, 0x02	; 2
	TCCR0B |= (1<<CS02) | (1<<CS00);	//SETS PRESCALLER TO 1024
	
	while (Count < 100);	//WAITS HERE UNTIL TIMMER INTERUPT IS COMPLETE
}
ISR (TIMER0_COMPA_vect){	//TIMMER COMPARE INTERUPT A
	while (Count < 100){	//CONINUES LOOP UNTIL COUNT = 100
 106:	0e c0       	rjmp	.+28     	; 0x124 <__vector_14+0x30>
		PORTB &= (0<<PORTB2);//TURNS LED ON
 108:	85 b1       	in	r24, 0x05	; 5
 10a:	15 b8       	out	0x05, r1	; 5
		if ((TIFR0 & 0x02) == 0x02){	//IF THE OCF0A FLAG IS SET HIGH DO THIS
 10c:	a9 9b       	sbis	0x15, 1	; 21
 10e:	0a c0       	rjmp	.+20     	; 0x124 <__vector_14+0x30>
			TIFR0 = 0X02;	//CLEAR FLAG
 110:	25 bb       	out	0x15, r18	; 21
			Count++;		//INCRIMENT COUNT
 112:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 116:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <_edata+0x1>
 11a:	01 96       	adiw	r24, 0x01	; 1
 11c:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <_edata+0x1>
 120:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
	TCCR0B |= (1<<CS02) | (1<<CS00);	//SETS PRESCALLER TO 1024
	
	while (Count < 100);	//WAITS HERE UNTIL TIMMER INTERUPT IS COMPLETE
}
ISR (TIMER0_COMPA_vect){	//TIMMER COMPARE INTERUPT A
	while (Count < 100){	//CONINUES LOOP UNTIL COUNT = 100
 124:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 128:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <_edata+0x1>
 12c:	84 36       	cpi	r24, 0x64	; 100
 12e:	91 05       	cpc	r25, r1
 130:	5c f3       	brlt	.-42     	; 0x108 <__vector_14+0x14>
		if ((TIFR0 & 0x02) == 0x02){	//IF THE OCF0A FLAG IS SET HIGH DO THIS
			TIFR0 = 0X02;	//CLEAR FLAG
			Count++;		//INCRIMENT COUNT
		}
	}
	PORTB |= (1<<PORTB2);	//TURNS LED OFF
 132:	2a 9a       	sbi	0x05, 2	; 5
}
 134:	9f 91       	pop	r25
 136:	8f 91       	pop	r24
 138:	2f 91       	pop	r18
 13a:	0f 90       	pop	r0
 13c:	0f be       	out	0x3f, r0	; 63
 13e:	0f 90       	pop	r0
 140:	1f 90       	pop	r1
 142:	18 95       	reti

00000144 <_exit>:
 144:	f8 94       	cli

00000146 <__stop_program>:
 146:	ff cf       	rjmp	.-2      	; 0x146 <__stop_program>
